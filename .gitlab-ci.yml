variables:
  PACKAGE_PATH: /go/src/gitlab.com/hypnoglow/example-go-docker-gitlab

stages:
  - dep
  - build
  - deploy

# A hack to make Golang-in-Gitlab happy
.anchors:
  - &inject-gopath
      mkdir -p $(dirname ${PACKAGE_PATH})
      && ln -s ${CI_PROJECT_DIR} ${PACKAGE_PATH}
      && cd ${PACKAGE_PATH}

dep:
  stage: dep
  image: golang:1.13.4
  before_script:
    - curl -sSL https://github.com/golang/dep/releases/download/v0.5.0/dep-linux-amd64 -o /go/bin/dep
    - chmod +x /go/bin/dep
    - *inject-gopath
  script:
    - dep ensure -v -vendor-only
  artifacts:
    name: "vendor-$CI_PIPELINE_ID"
    paths:
      - vendor/
    expire_in: 1 hour
  only:
    - prod


build:
  stage: build
  dependencies:
    - dep
  image: golang:1.13.4
  script:
    - env GOOS=linux GOARCH=amd64 go build 
  only:
    - prod


prod-deploy:
  stage: deploy
  image: instrumentisto/rsync-ssh:latest
  environment:
    name: prod
  script:
    - 'which ssh-agent || ( sudo apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$PROD_SERVERS_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - scp -avz ./golden_fly $PROD_USERNAME@$PROD_HOST:$PROD_FOLDER
  only:
    - prod


